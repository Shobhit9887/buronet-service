[
  {
    "ContainingType": "buronet_service.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/Auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "buronet_service.Models.DTOs.LoginDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "buronet_service.Controllers.AuthController",
    "Method": "Logout",
    "RelativePath": "api/Auth/logout",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "buronet_service.Controllers.AuthController",
    "Method": "GetProfile",
    "RelativePath": "api/Auth/profile",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "buronet_service.Controllers.AuthController",
    "Method": "Register",
    "RelativePath": "api/Auth/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "buronet_service.Models.DTOs.RegisterDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "buronet_messaging_service.Hubs.ChatHub",
    "Method": "OnConnectedAsync",
    "RelativePath": "api/ChatHub",
    "HttpMethod": "",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "buronet_messaging_service.Hubs.ChatHub",
    "Method": "OnDisconnectedAsync",
    "RelativePath": "api/ChatHub",
    "HttpMethod": "",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "exception",
        "Type": "System.Exception",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "buronet_messaging_service.Hubs.ChatHub",
    "Method": "SendMessageToConversation",
    "RelativePath": "api/ChatHub",
    "HttpMethod": "",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "conversationId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "content",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "clientId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "buronet_messaging_service.Hubs.ChatHub",
    "Method": "CreateNewConversation",
    "RelativePath": "api/ChatHub",
    "HttpMethod": "",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "buronet_messaging_service.Models.DTOs.CreateConversationDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "buronet_service.Controllers.ConnectionsController",
    "Method": "GetConnections",
    "RelativePath": "api/Connections",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[buronet_service.Models.DTOs.User.ConnectionDto, buronet-service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "buronet_service.Controllers.ConnectionsController",
    "Method": "RemoveConnection",
    "RelativePath": "api/Connections/{connectedUserId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "connectedUserId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "buronet_service.Controllers.ConnectionsController",
    "Method": "DiscoverUsers",
    "RelativePath": "api/Connections/discover",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[buronet_service.Models.DTOs.User.UserCardDto, buronet-service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "buronet_service.Controllers.ConnectionsController",
    "Method": "GetNetworkMetrics",
    "RelativePath": "api/Connections/metrics",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "buronet_service.Models.DTOs.User.NetworkMetricsDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "buronet_service.Controllers.ConnectionsController",
    "Method": "AcceptConnectionRequest",
    "RelativePath": "api/Connections/requests/{requestId}/accept",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "requestId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "buronet_service.Controllers.ConnectionsController",
    "Method": "RejectConnectionRequest",
    "RelativePath": "api/Connections/requests/{requestId}/reject",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "requestId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "buronet_service.Controllers.ConnectionsController",
    "Method": "GetPendingRequests",
    "RelativePath": "api/Connections/requests/pending",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[buronet_service.Models.DTOs.User.ConnectionRequestDto, buronet-service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "buronet_service.Controllers.ConnectionsController",
    "Method": "SendConnectionRequest",
    "RelativePath": "api/Connections/send-request",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "sendDto",
        "Type": "buronet_service.Models.DTOs.User.SendConnectionRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "buronet_service.Models.DTOs.User.ConnectionRequestDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "buronet_messaging_service.Controllers.ConversationsController",
    "Method": "GetUserConversations",
    "RelativePath": "api/Conversations",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[buronet_messaging_service.Models.DTOs.ConversationDto, buronet_messaging_service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "buronet_messaging_service.Controllers.ConversationsController",
    "Method": "CreateConversation",
    "RelativePath": "api/Conversations",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "buronet_messaging_service.Models.DTOs.CreateConversationDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "buronet_messaging_service.Models.DTOs.ConversationDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "buronet_messaging_service.Controllers.ConversationsController",
    "Method": "GetConversation",
    "RelativePath": "api/Conversations/{conversationId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "conversationId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "buronet_messaging_service.Models.DTOs.ConversationDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "buronet_messaging_service.Controllers.MessagesController",
    "Method": "GetConversationMessages",
    "RelativePath": "api/conversations/{conversationId}/Messages",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "conversationId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[buronet_messaging_service.Models.DTOs.MessageDto, buronet_messaging_service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "buronet_messaging_service.Controllers.MessagesController",
    "Method": "SendMessage",
    "RelativePath": "api/conversations/{conversationId}/Messages",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "conversationId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "createDto",
        "Type": "buronet_messaging_service.Models.DTOs.CreateMessageDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "buronet_messaging_service.Models.DTOs.MessageDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "buronet_service.Controllers.HeroController",
    "Method": "Get",
    "RelativePath": "api/Hero",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "isActive",
        "Type": "System.Nullable\u00601[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "buronet_service.Controllers.HeroController",
    "Method": "Post",
    "RelativePath": "api/Hero",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "heroObject",
        "Type": "buronet_service.Models.AddUpdateHero",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "buronet_service.Controllers.HeroController",
    "Method": "Get",
    "RelativePath": "api/Hero/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "buronet_service.Controllers.HeroController",
    "Method": "Put",
    "RelativePath": "api/Hero/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "heroObject",
        "Type": "buronet_service.Models.AddUpdateHero",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "buronet_service.Controllers.HeroController",
    "Method": "Delete",
    "RelativePath": "api/Hero/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "buronet_service.Controllers.PostsController",
    "Method": "GetAllPosts",
    "RelativePath": "api/Posts",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[buronet_service.Models.DTOs.User.PostDto, buronet-service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "buronet_service.Controllers.PostsController",
    "Method": "CreatePost",
    "RelativePath": "api/Posts",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "buronet_service.Models.DTOs.User.CreatePostDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "buronet_service.Models.DTOs.User.PostDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "buronet_service.Controllers.PostsController",
    "Method": "GetPostById",
    "RelativePath": "api/Posts/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "buronet_service.Models.DTOs.User.PostDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "buronet_service.Controllers.PostsController",
    "Method": "UpdatePost",
    "RelativePath": "api/Posts/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "buronet_service.Models.DTOs.User.UpdatePostDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "buronet_service.Controllers.PostsController",
    "Method": "DeletePost",
    "RelativePath": "api/Posts/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "buronet_service.Controllers.PostsController",
    "Method": "AddComment",
    "RelativePath": "api/Posts/{id}/comments",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "createDto",
        "Type": "buronet_service.Models.DTOs.User.CreateCommentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "buronet_service.Models.DTOs.User.CommentDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "buronet_service.Controllers.PostsController",
    "Method": "ToggleLike",
    "RelativePath": "api/Posts/{id}/like",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "buronet_service.Controllers.PostsController",
    "Method": "DeleteComment",
    "RelativePath": "api/Posts/{postId}/comments/{commentId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "postId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "commentId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "buronet_service.Controllers.PostsController",
    "Method": "GetTrendingTags",
    "RelativePath": "api/Posts/trending-tags",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "limit",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[buronet_service.Models.DTOs.User.TagWithTotalCountDto, buronet-service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "buronet_service.Controllers.UsersController",
    "Method": "GetCurrentUserProfile",
    "RelativePath": "api/Users/profile",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "buronet_service.Models.DTOs.User.UserProfileDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "buronet_service.Controllers.UsersController",
    "Method": "UpdateCurrentUserProfile",
    "RelativePath": "api/Users/profile",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updateDto",
        "Type": "buronet_service.Models.DTOs.User.UpdateUserProfileDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "buronet_service.Models.DTOs.User.UserProfileDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "buronet_service.Controllers.UsersController",
    "Method": "GetUserCoaching",
    "RelativePath": "api/Users/profile/coaching",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[buronet_service.Models.DTOs.User.UserCoachingDto, buronet-service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "buronet_service.Controllers.UsersController",
    "Method": "AddUserCoaching",
    "RelativePath": "api/Users/profile/coaching",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "coachingDto",
        "Type": "buronet_service.Models.DTOs.User.UpdateUserCoachingDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "buronet_service.Models.DTOs.User.UserCoachingDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "buronet_service.Controllers.UsersController",
    "Method": "UpdateUserCoaching",
    "RelativePath": "api/Users/profile/coaching/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "coachingDto",
        "Type": "buronet_service.Models.DTOs.User.UpdateUserCoachingDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "buronet_service.Controllers.UsersController",
    "Method": "DeleteUserCoaching",
    "RelativePath": "api/Users/profile/coaching/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "buronet_service.Controllers.UsersController",
    "Method": "GetUserCommunityGroups",
    "RelativePath": "api/Users/profile/communitygroups",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[buronet_service.Models.DTOs.User.UserCommunityGroupDto, buronet-service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "buronet_service.Controllers.UsersController",
    "Method": "AddUserCommunityGroup",
    "RelativePath": "api/Users/profile/communitygroups",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "communityGroupDto",
        "Type": "buronet_service.Models.DTOs.User.UpdateUserCommunityGroupDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "buronet_service.Models.DTOs.User.UserCommunityGroupDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "buronet_service.Controllers.UsersController",
    "Method": "UpdateUserCommunityGroup",
    "RelativePath": "api/Users/profile/communitygroups/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "communityGroupDto",
        "Type": "buronet_service.Models.DTOs.User.UpdateUserCommunityGroupDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "buronet_service.Controllers.UsersController",
    "Method": "DeleteUserCommunityGroup",
    "RelativePath": "api/Users/profile/communitygroups/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "buronet_service.Controllers.UsersController",
    "Method": "GetUserEducation",
    "RelativePath": "api/Users/profile/education",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[buronet_service.Models.DTOs.User.UserEducationDto, buronet-service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "buronet_service.Controllers.UsersController",
    "Method": "AddUserEducation",
    "RelativePath": "api/Users/profile/education",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "educationDto",
        "Type": "buronet_service.Models.DTOs.User.UpdateUserEducationDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "buronet_service.Models.DTOs.User.UserEducationDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "buronet_service.Controllers.UsersController",
    "Method": "UpdateUserEducation",
    "RelativePath": "api/Users/profile/education/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "educationDto",
        "Type": "buronet_service.Models.DTOs.User.UpdateUserEducationDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "buronet_service.Controllers.UsersController",
    "Method": "DeleteUserEducation",
    "RelativePath": "api/Users/profile/education/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "buronet_service.Controllers.UsersController",
    "Method": "GetUserExamAttempts",
    "RelativePath": "api/Users/profile/examattempts",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[buronet_service.Models.DTOs.User.UserExamAttemptDto, buronet-service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "buronet_service.Controllers.UsersController",
    "Method": "AddUserExamAttempt",
    "RelativePath": "api/Users/profile/examattempts",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "examAttemptDto",
        "Type": "buronet_service.Models.DTOs.User.UpdateUserExamAttemptDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "buronet_service.Models.DTOs.User.UserExamAttemptDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "buronet_service.Controllers.UsersController",
    "Method": "UpdateUserExamAttempt",
    "RelativePath": "api/Users/profile/examattempts/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "examAttemptDto",
        "Type": "buronet_service.Models.DTOs.User.UpdateUserExamAttemptDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "buronet_service.Controllers.UsersController",
    "Method": "DeleteUserExamAttempt",
    "RelativePath": "api/Users/profile/examattempts/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "buronet_service.Controllers.UsersController",
    "Method": "GetUserExperiences",
    "RelativePath": "api/Users/profile/experiences",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[buronet_service.Models.DTOs.User.UserExperienceDto, buronet-service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "buronet_service.Controllers.UsersController",
    "Method": "AddUserExperience",
    "RelativePath": "api/Users/profile/experiences",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "experienceDto",
        "Type": "buronet_service.Models.DTOs.User.UpdateUserExperienceDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "buronet_service.Models.DTOs.User.UserExperienceDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "buronet_service.Controllers.UsersController",
    "Method": "UpdateUserExperience",
    "RelativePath": "api/Users/profile/experiences/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "experienceDto",
        "Type": "buronet_service.Models.DTOs.User.UpdateUserExperienceDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "buronet_service.Controllers.UsersController",
    "Method": "DeleteUserExperience",
    "RelativePath": "api/Users/profile/experiences/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "buronet_service.Controllers.UsersController",
    "Method": "GetUserProjects",
    "RelativePath": "api/Users/profile/projects",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[buronet_service.Models.DTOs.User.UserProjectDto, buronet-service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "buronet_service.Controllers.UsersController",
    "Method": "AddUserProject",
    "RelativePath": "api/Users/profile/projects",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "projectDto",
        "Type": "buronet_service.Models.DTOs.User.UpdateUserProjectDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "buronet_service.Models.DTOs.User.UserProjectDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "buronet_service.Controllers.UsersController",
    "Method": "UpdateUserProject",
    "RelativePath": "api/Users/profile/projects/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "projectDto",
        "Type": "buronet_service.Models.DTOs.User.UpdateUserProjectDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "buronet_service.Controllers.UsersController",
    "Method": "DeleteUserProject",
    "RelativePath": "api/Users/profile/projects/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "buronet_service.Controllers.UsersController",
    "Method": "GetUserPublications",
    "RelativePath": "api/Users/profile/publications",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[buronet_service.Models.DTOs.User.UserPublicationDto, buronet-service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "buronet_service.Controllers.UsersController",
    "Method": "AddUserPublication",
    "RelativePath": "api/Users/profile/publications",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "publicationDto",
        "Type": "buronet_service.Models.DTOs.User.UpdateUserPublicationDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "buronet_service.Models.DTOs.User.UserPublicationDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "buronet_service.Controllers.UsersController",
    "Method": "UpdateUserPublication",
    "RelativePath": "api/Users/profile/publications/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "publicationDto",
        "Type": "buronet_service.Models.DTOs.User.UpdateUserPublicationDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "buronet_service.Controllers.UsersController",
    "Method": "DeleteUserPublication",
    "RelativePath": "api/Users/profile/publications/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "buronet_service.Controllers.UsersController",
    "Method": "GetUserSkills",
    "RelativePath": "api/Users/profile/skills",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[buronet_service.Models.DTOs.User.UserSkillDto, buronet-service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "buronet_service.Controllers.UsersController",
    "Method": "AddUserSkill",
    "RelativePath": "api/Users/profile/skills",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "skillDto",
        "Type": "buronet_service.Models.DTOs.User.UpdateUserSkillDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "buronet_service.Models.DTOs.User.UserSkillDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "buronet_service.Controllers.UsersController",
    "Method": "UpdateUserSkill",
    "RelativePath": "api/Users/profile/skills/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "skillDto",
        "Type": "buronet_service.Models.DTOs.User.UpdateUserSkillDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "buronet_service.Controllers.UsersController",
    "Method": "DeleteUserSkill",
    "RelativePath": "api/Users/profile/skills/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "buronet_messaging_service.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[buronet_messaging_service.WeatherForecast, buronet_messaging_service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  },
  {
    "ContainingType": "buronet_service.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[buronet_service.WeatherForecast, buronet-service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]